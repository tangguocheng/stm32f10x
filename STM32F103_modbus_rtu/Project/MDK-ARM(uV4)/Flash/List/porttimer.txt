; generated by Component: ARM Compiler 5.05 update 2 (build 169) Tool: ArmCC [4d0f38]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\flash\obj\porttimer.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\porttimer.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\Libraries\STM32_USB-FS-Device_Driver\inc -I..\..\Libraries\CMSIS\Include -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User\app\inc -I..\..\User\fonts -I..\..\User\images -I..\..\User\uIP\uip -I..\..\User\uIP\http -I..\..\User\uIP\dm9000 -I..\..\User\FatFS\src -I..\..\User\usb_mass -I..\..\User\CH376\inc -I..\..\User\FreeRTOS\Source\include -I..\..\User\FreeRTOS\Source\portable\MemMang -I..\..\User\FreeRTOS\Source\portable\RVDS\ARM_CM3 -I..\..\User\FreeModbus-V1.5\include -I..\..\User\FreeModbus-V1.5\STM32F103-PORT -I..\..\User\FreeModbus-V1.5\BARE\port -I..\..\User\FreeModbus-V1.5\rtu -IE:\woosiyuan\smarthome\stm32f10x\STM32F103_modbus_rtu\Project\MDK-ARM(uV4)\RTE -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\Include -IC:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.2.0\Device\Include -D__MICROLIB -D__UVISION_VERSION=515 -D_RTE_ -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\flash\obj\porttimer.crf ..\..\User\FreeModbus-V1.5\BARE\port\porttimer.c]
                          THUMB

                          AREA ||i.TIM4_IRQHandler||, CODE, READONLY, ALIGN=2

                  TIM4_IRQHandler PROC
;;;124    
;;;125    void TIM4_IRQHandler(void)
000000  b510              PUSH     {r4,lr}
;;;126    {
;;;127            if (TIM_GetITStatus(TIM4, TIM_IT_Update) != RESET) {
000002  2101              MOVS     r1,#1
000004  4805              LDR      r0,|L1.28|
000006  f7fffffe          BL       TIM_GetITStatus
00000a  b128              CBZ      r0,|L1.24|
;;;128                    //清除定时器T4溢出中断标志位
;;;129                    TIM_ClearITPendingBit(TIM4, TIM_IT_Update);
00000c  2101              MOVS     r1,#1
00000e  4803              LDR      r0,|L1.28|
000010  f7fffffe          BL       TIM_ClearITPendingBit
;;;130    
;;;131                    prvvTIMERExpiredISR( );
000014  f7fffffe          BL       prvvTIMERExpiredISR
                  |L1.24|
;;;132            }
;;;133    }
000018  bd10              POP      {r4,pc}
;;;134    
                          ENDP

00001a  0000              DCW      0x0000
                  |L1.28|
                          DCD      0x40000800

                          AREA ||i.prvvTIMERExpiredISR||, CODE, READONLY, ALIGN=2

                  prvvTIMERExpiredISR PROC
;;;117     */
;;;118    static void prvvTIMERExpiredISR( void )
000000  b510              PUSH     {r4,lr}
;;;119    {
;;;120            ( void )pxMBPortCBTimerExpired(  );
000002  4802              LDR      r0,|L2.12|
000004  6800              LDR      r0,[r0,#0]  ; pxMBPortCBTimerExpired
000006  4780              BLX      r0
;;;121    }
000008  bd10              POP      {r4,pc}
;;;122    
                          ENDP

00000a  0000              DCW      0x0000
                  |L2.12|
                          DCD      pxMBPortCBTimerExpired

                          AREA ||i.vMBPortTimersDisable||, CODE, READONLY, ALIGN=2

                  vMBPortTimersDisable PROC
;;;100    void
;;;101    vMBPortTimersDisable(  )
000000  b510              PUSH     {r4,lr}
;;;102    {
;;;103            /* Disable any pending timers. */
;;;104    
;;;105            /*GXP,ADD,2016年11月9日15:13:15*/
;;;106    
;;;107            TIM_ClearITPendingBit(TIM4, TIM_IT_Update);
000002  2101              MOVS     r1,#1
000004  4808              LDR      r0,|L3.40|
000006  f7fffffe          BL       TIM_ClearITPendingBit
;;;108            TIM_ITConfig(TIM4, TIM_IT_Update, DISABLE);
00000a  2200              MOVS     r2,#0
00000c  2101              MOVS     r1,#1
00000e  4806              LDR      r0,|L3.40|
000010  f7fffffe          BL       TIM_ITConfig
;;;109            TIM_SetCounter(TIM4,0x0000);
000014  2100              MOVS     r1,#0
000016  4804              LDR      r0,|L3.40|
000018  f7fffffe          BL       TIM_SetCounter
;;;110            //关闭定时器4
;;;111            TIM_Cmd(TIM4, DISABLE);
00001c  2100              MOVS     r1,#0
00001e  4802              LDR      r0,|L3.40|
000020  f7fffffe          BL       TIM_Cmd
;;;112    }
000024  bd10              POP      {r4,pc}
;;;113    
                          ENDP

000026  0000              DCW      0x0000
                  |L3.40|
                          DCD      0x40000800

                          AREA ||i.vMBPortTimersEnable||, CODE, READONLY, ALIGN=2

                  vMBPortTimersEnable PROC
;;;83     void
;;;84     vMBPortTimersEnable(  )
000000  b510              PUSH     {r4,lr}
;;;85     {
;;;86             /* Enable the timer with the timeout passed to xMBPortTimersInit( ) */
;;;87     
;;;88             /*GXP,ADD,2016年11月9日15:13:15*/
;;;89     
;;;90             TIM_ClearITPendingBit(TIM4, TIM_IT_Update);
000002  2101              MOVS     r1,#1
000004  4808              LDR      r0,|L4.40|
000006  f7fffffe          BL       TIM_ClearITPendingBit
;;;91     
;;;92             TIM_ITConfig(TIM4, TIM_IT_Update, ENABLE);
00000a  2201              MOVS     r2,#1
00000c  4611              MOV      r1,r2
00000e  4806              LDR      r0,|L4.40|
000010  f7fffffe          BL       TIM_ITConfig
;;;93             //设定定时器4的初始值
;;;94             TIM_SetCounter(TIM4,0x0000);
000014  2100              MOVS     r1,#0
000016  4804              LDR      r0,|L4.40|
000018  f7fffffe          BL       TIM_SetCounter
;;;95             //定时器4启动
;;;96             TIM_Cmd(TIM4, ENABLE);
00001c  2101              MOVS     r1,#1
00001e  4802              LDR      r0,|L4.40|
000020  f7fffffe          BL       TIM_Cmd
;;;97     
;;;98     }
000024  bd10              POP      {r4,pc}
;;;99     
                          ENDP

000026  0000              DCW      0x0000
                  |L4.40|
                          DCD      0x40000800

                          AREA ||i.xMBPortTimersInit||, CODE, READONLY, ALIGN=2

                  xMBPortTimersInit PROC
;;;34     BOOL
;;;35     xMBPortTimersInit( USHORT usTim1Timerout50us )
000000  b57f              PUSH     {r0-r6,lr}
;;;36     {
000002  4604              MOV      r4,r0
;;;37             /*GXP,ADD,2016年11月9日15:13:15*/
;;;38     
;;;39             TIM_TimeBaseInitTypeDef  TIM_TimeBaseStructure;
;;;40             NVIC_InitTypeDef NVIC_InitStructure;
;;;41     
;;;42             uint16_t PrescalerValue = 0;
000004  2500              MOVS     r5,#0
;;;43     
;;;44             //使能定时器4时钟
;;;45             RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM4, ENABLE);
000006  2101              MOVS     r1,#1
000008  2004              MOVS     r0,#4
00000a  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;46     
;;;47             //定时器时间基配置说明
;;;48             //HCLK为72MHz，APB1经过2分频为36MHz
;;;49             //TIM4的时钟倍频后为72MHz（硬件自动倍频,达到最大）
;;;50             //TIM4的分频系数为3599，时间基频率为72 / (1 + Prescaler) = 20KHz,基准为50us
;;;51             //TIM最大计数值为usTim1Timerout50u
;;;52             PrescalerValue = (uint16_t) (SystemCoreClock / 20000) - 1;
00000e  481c              LDR      r0,|L5.128|
000010  6800              LDR      r0,[r0,#0]  ; SystemCoreClock
000012  f6446120          MOV      r1,#0x4e20
000016  fbb0f0f1          UDIV     r0,r0,r1
00001a  1e40              SUBS     r0,r0,#1
00001c  b285              UXTH     r5,r0
;;;53             //定时器4初始化
;;;54             TIM_TimeBaseStructure.TIM_Period = (uint16_t) usTim1Timerout50us;
00001e  f8ad4008          STRH     r4,[sp,#8]
;;;55             TIM_TimeBaseStructure.TIM_Prescaler = PrescalerValue;
000022  f8ad5004          STRH     r5,[sp,#4]
;;;56             TIM_TimeBaseStructure.TIM_ClockDivision = 0;
000026  2000              MOVS     r0,#0
000028  f8ad000a          STRH     r0,[sp,#0xa]
;;;57             TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;
00002c  f8ad0006          STRH     r0,[sp,#6]
;;;58             TIM_TimeBaseInit(TIM4, &TIM_TimeBaseStructure);
000030  a901              ADD      r1,sp,#4
000032  4814              LDR      r0,|L5.132|
000034  f7fffffe          BL       TIM_TimeBaseInit
;;;59             //预装载使能
;;;60             TIM_ARRPreloadConfig(TIM4, ENABLE);
000038  2101              MOVS     r1,#1
00003a  4812              LDR      r0,|L5.132|
00003c  f7fffffe          BL       TIM_ARRPreloadConfig
;;;61     
;;;62             //定时器4中断优先级
;;;63             NVIC_InitStructure.NVIC_IRQChannel = TIM4_IRQn;
000040  201e              MOVS     r0,#0x1e
000042  f88d0000          STRB     r0,[sp,#0]
;;;64             NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 4;
000046  2004              MOVS     r0,#4
000048  f88d0001          STRB     r0,[sp,#1]
;;;65             NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;
00004c  2000              MOVS     r0,#0
00004e  f88d0002          STRB     r0,[sp,#2]
;;;66             NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
000052  2001              MOVS     r0,#1
000054  f88d0003          STRB     r0,[sp,#3]
;;;67             NVIC_Init(&NVIC_InitStructure);
000058  4668              MOV      r0,sp
00005a  f7fffffe          BL       NVIC_Init
;;;68     
;;;69             //清除溢出中断标志位
;;;70             TIM_ClearITPendingBit(TIM4,TIM_IT_Update);
00005e  2101              MOVS     r1,#1
000060  4808              LDR      r0,|L5.132|
000062  f7fffffe          BL       TIM_ClearITPendingBit
;;;71     
;;;72             //定时器4溢出中断关闭
;;;73             TIM_ITConfig(TIM4, TIM_IT_Update, DISABLE);
000066  2200              MOVS     r2,#0
000068  2101              MOVS     r1,#1
00006a  4806              LDR      r0,|L5.132|
00006c  f7fffffe          BL       TIM_ITConfig
;;;74     
;;;75             //定时器4禁能
;;;76             TIM_Cmd(TIM4,  DISABLE);
000070  2100              MOVS     r1,#0
000072  4804              LDR      r0,|L5.132|
000074  f7fffffe          BL       TIM_Cmd
;;;77     
;;;78             return TRUE;
000078  2001              MOVS     r0,#1
;;;79     
;;;80     }
00007a  b004              ADD      sp,sp,#0x10
00007c  bd70              POP      {r4-r6,pc}
;;;81     
                          ENDP

00007e  0000              DCW      0x0000
                  |L5.128|
                          DCD      SystemCoreClock
                  |L5.132|
                          DCD      0x40000800

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\FreeModbus-V1.5\\BARE\\port\\porttimer.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___11_porttimer_c_ebc59195____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___11_porttimer_c_ebc59195____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___11_porttimer_c_ebc59195____REVSH|
#line 128
|__asm___11_porttimer_c_ebc59195____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
